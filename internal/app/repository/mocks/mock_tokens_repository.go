// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/olezhek28/items-keeper/internal/app/repository (interfaces: ITokensRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repository "github.com/olezhek28/items-keeper/internal/app/repository"
)

// MockITokensRepository is a mock of ITokensRepository interface.
type MockITokensRepository struct {
	ctrl     *gomock.Controller
	recorder *MockITokensRepositoryMockRecorder
}

// MockITokensRepositoryMockRecorder is the mock recorder for MockITokensRepository.
type MockITokensRepositoryMockRecorder struct {
	mock *MockITokensRepository
}

// NewMockITokensRepository creates a new mock instance.
func NewMockITokensRepository(ctrl *gomock.Controller) *MockITokensRepository {
	mock := &MockITokensRepository{ctrl: ctrl}
	mock.recorder = &MockITokensRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITokensRepository) EXPECT() *MockITokensRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockITokensRepository) Get(arg0 int64, arg1 repository.Bucket) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockITokensRepositoryMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockITokensRepository)(nil).Get), arg0, arg1)
}

// Save mocks base method.
func (m *MockITokensRepository) Save(arg0 int64, arg1 string, arg2 repository.Bucket) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockITokensRepositoryMockRecorder) Save(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockITokensRepository)(nil).Save), arg0, arg1, arg2)
}
